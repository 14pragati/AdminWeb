///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BVT_Admin_Wenapp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The devices recording.
    /// </summary>
    [TestModule("0982e74b-cba6-4b35-b235-2c2614f8b18b", ModuleType.Recording, 1)]
    public partial class devices : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BVT_Admin_WebappRepository repository.
        /// </summary>
        public static BVT_Admin_WebappRepository repo = BVT_Admin_WebappRepository.Instance;

        static devices instance = new devices();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public devices()
        {
            Data_model_path = "";
            FW_Path = "";
            new_FW = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static devices Instance
        {
            get { return instance; }
        }

#region Variables

        string _Data_model_path;

        /// <summary>
        /// Gets or sets the value of variable Data_model_path.
        /// </summary>
        [TestVariable("9b12fd37-ab2c-4d87-877d-d51fe9748cb0")]
        public string Data_model_path
        {
            get { return _Data_model_path; }
            set { _Data_model_path = value; }
        }

        string _FW_Path;

        /// <summary>
        /// Gets or sets the value of variable FW_Path.
        /// </summary>
        [TestVariable("f6a327be-7d3c-4dad-9842-654478b78535")]
        public string FW_Path
        {
            get { return _FW_Path; }
            set { _FW_Path = value; }
        }

        string _new_FW;

        /// <summary>
        /// Gets or sets the value of variable new_FW.
        /// </summary>
        [TestVariable("0f710e9c-056a-40cd-adc8-ed7bf5b88590")]
        public string new_FW
        {
            get { return _new_FW; }
            set { _new_FW = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable url.
        /// </summary>
        [TestVariable("0349e901-4169-4b6d-8d82-bb2facc1de58")]
        public string url
        {
            get { return repo.url; }
            set { repo.url = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Devices' at Center.", repo.AdminWebapp.DevicesInfo, new RecordItemIndex(0));
                repo.AdminWebapp.Devices.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(1));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(2));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.DeviceType'.", repo.AdminWebapp1.Root.DeviceTypeInfo, new RecordItemIndex(3));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.DeviceTypeInfo, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.ColMd6NoRightPadding'.", repo.AdminWebapp1.Root.ColMd6NoRightPaddingInfo, new RecordItemIndex(4));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.ColMd6NoRightPaddingInfo, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='table') on item 'AdminWebapp1.Root.Table'.", repo.AdminWebapp1.Root.TableInfo, new RecordItemIndex(5));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.TableInfo, "TagName", "table", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.DeviceType1'.", repo.AdminWebapp1.Root.DeviceType1Info, new RecordItemIndex(6));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.DeviceType1Info, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='label') on item 'AdminWebapp1.Root.UploadNewDataModelVersion'.", repo.AdminWebapp1.Root.UploadNewDataModelVersionInfo, new RecordItemIndex(7));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.UploadNewDataModelVersionInfo, "TagName", "label", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.ColMd61'.", repo.AdminWebapp1.Root.ColMd61Info, new RecordItemIndex(8));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.ColMd61Info, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.ColMd12FirmwareUpload'.", repo.AdminWebapp1.Root.ColMd12FirmwareUploadInfo, new RecordItemIndex(9));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.ColMd12FirmwareUploadInfo, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.FormGroup1'.", repo.AdminWebapp1.Root.FormGroup1Info, new RecordItemIndex(10));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.FormGroup1Info, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.FormGroup2'.", repo.AdminWebapp1.Root.FormGroup2Info, new RecordItemIndex(11));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.FormGroup2Info, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.UPLOADFIRMWARE'.", repo.AdminWebapp1.Root.UPLOADFIRMWAREInfo, new RecordItemIndex(12));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.UPLOADFIRMWAREInfo, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.TableResponsive1'.", repo.AdminWebapp1.Root.TableResponsive1Info, new RecordItemIndex(13));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.TableResponsive1Info, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.UPLOAD'.", repo.AdminWebapp1.Root.UPLOADInfo, new RecordItemIndex(14));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.UPLOADInfo, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='td') on item 'AdminWebapp1.Root.PointerTextCenter'.", repo.AdminWebapp1.Root.PointerTextCenterInfo, new RecordItemIndex(15));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.PointerTextCenterInfo, "TagName", "td", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.ColMd8ColSm12'.", repo.AdminWebapp1.Root.ColMd8ColSm12Info, new RecordItemIndex(16));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.ColMd8ColSm12Info, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(16)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='select') on item 'AdminWebapp1.Root.FirmwareFilter'.", repo.AdminWebapp1.Root.FirmwareFilterInfo, new RecordItemIndex(17));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.FirmwareFilterInfo, "TagName", "select", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left DoubleClick item 'AdminWebapp.Root.APR20' at Center.", repo.AdminWebapp.Root.APR20Info, new RecordItemIndex(18));
                repo.AdminWebapp.Root.APR20.DoubleClick();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(18)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(19));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(19)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(20));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(20)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.Download1' at Center.", repo.AdminWebapp.Root.Download1Info, new RecordItemIndex(21));
                repo.AdminWebapp.Root.Download1.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(21)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(22));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(22)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.DataModel' at 216;19.", repo.AdminWebapp.Root.DataModelInfo, new RecordItemIndex(23));
                repo.AdminWebapp.Root.DataModel.Click("216;19");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(23)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence from variable '$Data_model_path' with focus on 'Open.Text1148'.", repo.Open.Text1148Info, new RecordItemIndex(24));
                repo.Open.Text1148.PressKeys(Data_model_path);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(24)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'Open.ButtonOpen' at 40;20.", repo.Open.ButtonOpenInfo, new RecordItemIndex(25));
                repo.Open.ButtonOpen.Click("40;20");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(25)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.UPLOAD' at Center.", repo.AdminWebapp.Root.UPLOADInfo, new RecordItemIndex(26));
                repo.AdminWebapp.Root.UPLOAD.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(26)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 2s.", new RecordItemIndex(27));
                Delay.Duration(2000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(27)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(28));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(28)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.UPLOADFIRMWARE' at Center.", repo.AdminWebapp.Root.UPLOADFIRMWAREInfo, new RecordItemIndex(29));
                repo.AdminWebapp.Root.UPLOADFIRMWARE.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(29)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.ManageDeviceType'.", repo.AdminWebapp1.Root.ManageDeviceTypeInfo, new RecordItemIndex(30));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.ManageDeviceTypeInfo, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(30)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.UploadNewFirmwareVersion'.", repo.AdminWebapp1.Root.UploadNewFirmwareVersionInfo, new RecordItemIndex(31));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.UploadNewFirmwareVersionInfo, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(31)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.UploadNewFirmwareVersion1'.", repo.AdminWebapp1.Root.UploadNewFirmwareVersion1Info, new RecordItemIndex(32));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.UploadNewFirmwareVersion1Info, "TagName", "span", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(32)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.UploadWrapper'.", repo.AdminWebapp1.Root.UploadWrapperInfo, new RecordItemIndex(33));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.UploadWrapperInfo, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(33)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='div') on item 'AdminWebapp1.Root.ContentWrapper'.", repo.AdminWebapp1.Root.ContentWrapperInfo, new RecordItemIndex(34));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.ContentWrapperInfo, "TagName", "div", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(34)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagName='button') on item 'AdminWebapp1.Root.Upload1'.", repo.AdminWebapp1.Root.Upload1Info, new RecordItemIndex(35));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.Upload1Info, "TagName", "button", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(35)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Cancel') on item 'AdminWebapp1.Root.Cancel'.", repo.AdminWebapp1.Root.CancelInfo, new RecordItemIndex(36));
                Validate.AttributeEqual(repo.AdminWebapp1.Root.CancelInfo, "InnerText", "Cancel", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(36)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence '12345' with focus on 'AdminWebapp.InputTagPco'.", repo.AdminWebapp.InputTagPcoInfo, new RecordItemIndex(37));
                repo.AdminWebapp.InputTagPco.PressKeys("12345");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(37)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence from variable '$new_FW' with focus on 'AdminWebapp.Fmversion'.", repo.AdminWebapp.FmversionInfo, new RecordItemIndex(38));
                repo.AdminWebapp.Fmversion.PressKeys(new_FW);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(38)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence 'host 2' with focus on 'AdminWebapp.Root.DeviceType1'.", repo.AdminWebapp.Root.DeviceType1Info, new RecordItemIndex(39));
                repo.AdminWebapp.Root.DeviceType1.PressKeys("host 2");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(39)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence 'Auto' with focus on 'AdminWebapp.ChecksumAlgo'.", repo.AdminWebapp.ChecksumAlgoInfo, new RecordItemIndex(40));
                repo.AdminWebapp.ChecksumAlgo.PressKeys("Auto");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(40)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.NonAFR' at Center.", repo.AdminWebapp.Root.NonAFRInfo, new RecordItemIndex(41));
                repo.AdminWebapp.Root.NonAFR.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(41)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.Active' at Center.", repo.AdminWebapp.Root.ActiveInfo, new RecordItemIndex(42));
                repo.AdminWebapp.Root.Active.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(42)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence 'Ranorex_upload' with focus on 'AdminWebapp.Notes'.", repo.AdminWebapp.NotesInfo, new RecordItemIndex(43));
                repo.AdminWebapp.Notes.PressKeys("Ranorex_upload");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(43)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.Firmware' at Center.", repo.AdminWebapp.Root.FirmwareInfo, new RecordItemIndex(44));
                repo.AdminWebapp.Root.Firmware.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(44)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence from variable '$FW_Path' with focus on 'Open.Text1148'.", repo.Open.Text1148Info, new RecordItemIndex(45));
                repo.Open.Text1148.PressKeys(FW_Path);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(45)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'Open.ButtonOpen' at 40;20.", repo.Open.ButtonOpenInfo, new RecordItemIndex(46));
                repo.Open.ButtonOpen.Click("40;20");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(46)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'AdminWebapp.Root.UPLOAD' at Center.", repo.AdminWebapp.Root.UPLOADInfo, new RecordItemIndex(47));
                repo.AdminWebapp.Root.UPLOAD.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(47)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(48));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(49));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
