///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BVT_Admin_Wenapp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The download_alerts recording.
    /// </summary>
    [TestModule("2368246f-640e-486f-b805-bcbd6cff6aee", ModuleType.Recording, 1)]
    public partial class download_alerts : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BVT_Admin_WebappRepository repository.
        /// </summary>
        public static BVT_Admin_WebappRepository repo = BVT_Admin_WebappRepository.Instance;

        static download_alerts instance = new download_alerts();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public download_alerts()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static download_alerts Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable url.
        /// </summary>
        [TestVariable("0349e901-4169-4b6d-8d82-bb2facc1de58")]
        public string url
        {
            get { return repo.url; }
            set { repo.url = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Alerts' at Center.", repo.AdminWebapp.AlertsInfo, new RecordItemIndex(0));
            repo.AdminWebapp.Alerts.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.ManageAlertsDefinition'.", repo.AdminWebapp1.Root.ManageAlertsDefinitionInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.ManageAlertsDefinitionInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.ProductAlerts'.", repo.AdminWebapp1.Root.ProductAlertsInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.ProductAlertsInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.GeneralAlerts'.", repo.AdminWebapp1.Root.GeneralAlertsInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.GeneralAlertsInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='button') on item 'AdminWebapp1.Root.BtnBtnDefault4'.", repo.AdminWebapp1.Root.BtnBtnDefault4Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.BtnBtnDefault4Info, "TagName", "button");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='button') on item 'AdminWebapp1.Root.UPLOADPRODUCTALERT'.", repo.AdminWebapp1.Root.UPLOADPRODUCTALERTInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.UPLOADPRODUCTALERTInfo, "TagName", "button");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.ProductName'.", repo.AdminWebapp1.Root.ProductNameInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.ProductNameInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.FileName'.", repo.AdminWebapp1.Root.FileNameInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.FileNameInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.History'.", repo.AdminWebapp1.Root.HistoryInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.HistoryInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.ModifiedBy'.", repo.AdminWebapp1.Root.ModifiedByInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.ModifiedByInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='select') on item 'AdminWebapp1.Root.DeviceType2'.", repo.AdminWebapp1.Root.DeviceType2Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.DeviceType2Info, "TagName", "select");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='a') on item 'AdminWebapp1.Root.Download'.", repo.AdminWebapp1.Root.DownloadInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.DownloadInfo, "TagName", "a");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='img') on item 'AdminWebapp1.Root.History1'.", repo.AdminWebapp1.Root.History1Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.History1Info, "TagName", "img");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Root.Download' at Center.", repo.AdminWebapp.Root.DownloadInfo, new RecordItemIndex(15));
            repo.AdminWebapp.Root.Download.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'File Downloaded Successfully!') on item 'AdminWebapp.FileDownloadedSuccessfully'.", repo.AdminWebapp.FileDownloadedSuccessfullyInfo, new RecordItemIndex(16));
            Validate.AttributeContains(repo.AdminWebapp.FileDownloadedSuccessfullyInfo, "InnerText", "File Downloaded Successfully!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(17));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Root.History' at Center.", repo.AdminWebapp.Root.HistoryInfo, new RecordItemIndex(19));
            repo.AdminWebapp.Root.History.Click();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.RevisionHistory'.", repo.AdminWebapp1.RevisionHistoryInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.AdminWebapp1.RevisionHistoryInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='a') on item 'AdminWebapp1.Download'.", repo.AdminWebapp1.DownloadInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.AdminWebapp1.DownloadInfo, "TagName", "a");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.DivTagRow.HistoryStepsRow'.", repo.AdminWebapp1.DivTagRow.HistoryStepsRowInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.AdminWebapp1.DivTagRow.HistoryStepsRowInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.DivTagRow.ColMd5LeftSection'.", repo.AdminWebapp1.DivTagRow.ColMd5LeftSectionInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.AdminWebapp1.DivTagRow.ColMd5LeftSectionInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.DivTagRow.HistoryNoteRow'.", repo.AdminWebapp1.DivTagRow.HistoryNoteRowInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.AdminWebapp1.DivTagRow.HistoryNoteRowInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(26));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Download' at Center.", repo.AdminWebapp.DownloadInfo, new RecordItemIndex(27));
            repo.AdminWebapp.Download.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'File Downloaded Successfully!') on item 'AdminWebapp.FileDownloadedSuccessfully'.", repo.AdminWebapp.FileDownloadedSuccessfullyInfo, new RecordItemIndex(28));
            Validate.AttributeContains(repo.AdminWebapp.FileDownloadedSuccessfullyInfo, "InnerText", "File Downloaded Successfully!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(29));
            Delay.Duration(1000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(30));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.SomeSpanTag' at Center.", repo.AdminWebapp.SomeSpanTagInfo, new RecordItemIndex(31));
            repo.AdminWebapp.SomeSpanTag.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(32));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'AdminWebapp.Root.DeviceType' at Center.", repo.AdminWebapp.Root.DeviceTypeInfo, new RecordItemIndex(33));
            repo.AdminWebapp.Root.DeviceType.MoveTo();
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(34));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(35));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(36));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(37));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(38));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(39));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(40));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(41));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(42));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(43));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(44));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(45));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(46));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(47));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(48));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(49));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(50));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(51));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(52));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(53));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(54));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(55));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(56));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(57));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.GeneralAlerts' at Center.", repo.AdminWebapp.GeneralAlertsInfo, new RecordItemIndex(58));
            repo.AdminWebapp.GeneralAlerts.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(59));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Root.Download' at Center.", repo.AdminWebapp.Root.DownloadInfo, new RecordItemIndex(60));
            repo.AdminWebapp.Root.Download.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'File Downloaded Successfully!') on item 'AdminWebapp.FileDownloadedSuccessfully'.", repo.AdminWebapp.FileDownloadedSuccessfullyInfo, new RecordItemIndex(61));
            Validate.AttributeContains(repo.AdminWebapp.FileDownloadedSuccessfullyInfo, "InnerText", "File Downloaded Successfully!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(62));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(63));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='button') on item 'AdminWebapp1.Root.UPLOADGENERALALERT'.", repo.AdminWebapp1.Root.UPLOADGENERALALERTInfo, new RecordItemIndex(64));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.UPLOADGENERALALERTInfo, "TagName", "button");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.FileName'.", repo.AdminWebapp1.Root.FileNameInfo, new RecordItemIndex(65));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.FileNameInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.History'.", repo.AdminWebapp1.Root.HistoryInfo, new RecordItemIndex(66));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.HistoryInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.Modified'.", repo.AdminWebapp1.Root.ModifiedInfo, new RecordItemIndex(67));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.ModifiedInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='span') on item 'AdminWebapp1.Root.ModifiedBy'.", repo.AdminWebapp1.Root.ModifiedByInfo, new RecordItemIndex(68));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.ModifiedByInfo, "TagName", "span");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='a') on item 'AdminWebapp1.Root.Download'.", repo.AdminWebapp1.Root.DownloadInfo, new RecordItemIndex(69));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.DownloadInfo, "TagName", "a");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='img') on item 'AdminWebapp1.Root.History1'.", repo.AdminWebapp1.Root.History1Info, new RecordItemIndex(70));
            Validate.AttributeEqual(repo.AdminWebapp1.Root.History1Info, "TagName", "img");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Root.History' at Center.", repo.AdminWebapp.Root.HistoryInfo, new RecordItemIndex(71));
            repo.AdminWebapp.Root.History.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.RevisionHistory'.", repo.AdminWebapp1.RevisionHistoryInfo, new RecordItemIndex(72));
            Validate.AttributeEqual(repo.AdminWebapp1.RevisionHistoryInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.DivTagRow.ColMd5LeftSection'.", repo.AdminWebapp1.DivTagRow.ColMd5LeftSectionInfo, new RecordItemIndex(73));
            Validate.AttributeEqual(repo.AdminWebapp1.DivTagRow.ColMd5LeftSectionInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='a') on item 'AdminWebapp1.Download'.", repo.AdminWebapp1.DownloadInfo, new RecordItemIndex(74));
            Validate.AttributeEqual(repo.AdminWebapp1.DownloadInfo, "TagName", "a");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.DivTagRow.HistoryStepsRow'.", repo.AdminWebapp1.DivTagRow.HistoryStepsRowInfo, new RecordItemIndex(75));
            Validate.AttributeEqual(repo.AdminWebapp1.DivTagRow.HistoryStepsRowInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='div') on item 'AdminWebapp1.DivTagRow.HistoryNoteRow'.", repo.AdminWebapp1.DivTagRow.HistoryNoteRowInfo, new RecordItemIndex(76));
            Validate.AttributeEqual(repo.AdminWebapp1.DivTagRow.HistoryNoteRowInfo, "TagName", "div");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(77));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(78));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.Download' at Center.", repo.AdminWebapp.DownloadInfo, new RecordItemIndex(79));
            repo.AdminWebapp.Download.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'File Downloaded Successfully!') on item 'AdminWebapp.FileDownloadedSuccessfully'.", repo.AdminWebapp.FileDownloadedSuccessfullyInfo, new RecordItemIndex(80));
            Validate.AttributeContains(repo.AdminWebapp.FileDownloadedSuccessfullyInfo, "InnerText", "File Downloaded Successfully!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(81));
            Delay.Duration(1000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdminWebapp.Screenshots, false, new RecordItemIndex(82));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdminWebapp.SomeSpanTag' at Center.", repo.AdminWebapp.SomeSpanTagInfo, new RecordItemIndex(83));
            repo.AdminWebapp.SomeSpanTag.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(84));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
