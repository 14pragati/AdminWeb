///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace BVT_Admin_Wenapp
{
    public partial class To_verify_admin_web_dashboard_items
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_WaterSoftener(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The water softener device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Water Softener", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_ChemCheck(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The ChemCheck device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "ChemCheck", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_SaltSensor(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Salt Sensor device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Salt Sensor", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_SumpPumpController(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Sump Pump Controller device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Sump Pump Controller", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_TriLarm(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Tri_Larm device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Tri_Larm", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_PentekDefender(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Pentek Defender device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Pentek Defender", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_BackupSumpPump(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Backup Sump Pump device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Backup Sump Pump", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_Intelliconnect(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Intelliconnect device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Intelliconnect", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_IntelliDrive(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The IntelliDrive device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "IntelliDrive", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_Gateway(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Gateway device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Gateway", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_Intelliflo3(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Intelliflo 3 device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Intelliflo 3", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_IntelliSync(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The IntelliSync device type is visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "IntelliSync", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_HomeUsers(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Home users count is  visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Home Users", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_DealerUsers(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Dealer users count is  visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Dealer Users", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_SupportUsers(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Support users count is  visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Support Users", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_SuperAdminUsers(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Super admin users count is  visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Super Admin Users", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

        public void Validate_AdminUsers(RepoItemInfo spantagInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "The Admin users count is  visible on dashboard", spantagInfo);
            Validate.AttributeEqual(spantagInfo, "InnerText", "Admin Users", null, new Validate.Options(){ReportLevelOnFailure=ReportLevel.Warn});
        }

    }
}
